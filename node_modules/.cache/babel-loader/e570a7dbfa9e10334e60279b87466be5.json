{"ast":null,"code":"var _jsxFileName = \"/Users/ishaniamon/Downloads/realcustomhooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useHttp from \"./hooks/useHttp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasks = tasksObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in tasksObj) {\n      loadedTasks.push({\n        id: taskKey,\n        text: tasksObj[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = useHttp({\n    url: \"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks\"\n  }, transformTasks); // const fetchTasks = async (taskText) => {\n  // \tsetIsLoading(true);\n  // \tsetError(null);\n  // \ttry {\n  // \t\tconst response = await fetch(\n  // \t\t\t\"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\"\n  // \t\t);\n  // \t\tif (!response.ok) {\n  // \t\t\tconsole.log(\"Data add failed \");\n  // \t\t\tthrow new Error(\"Request failed!\");\n  // \t\t}\n  // \t\tconst data = await response.json();\n  // \t\tconst loadedTasks = [];\n  // \t\tfor (const taskKey in data) {\n  // \t\t\tloadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  // \t\t}\n  // \t\tsetTasks(loadedTasks);\n  // \t} catch (err) {\n  // \t\tsetError(err.message || \"Something went wrong!\");\n  // \t}\n  // \tsetIsLoading(false);\n  // };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"qi6xC9kn+jh2Tfg+iGiccxiATYI=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ishaniamon/Downloads/realcustomhooks/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","transformTasks","tasksObj","loadedTasks","taskKey","push","id","text","isLoading","error","sendRequest","fetchTasks","url","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,cAAc,GAAIC,QAAD,IAAc;AACpC,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,QAAtB,EAAgC;AAC/BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,QAAQ,CAACE,OAAD,CAAR,CAAkBG;AAAvC,OAAjB;AACA;;AAEDP,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACA,GARD;;AAUA,QAAM;AACLK,IAAAA,SADK;AAELC,IAAAA,KAFK;AAGLC,IAAAA,WAAW,EAAEC;AAHR,MAIFd,OAAO,CACV;AAAEe,IAAAA,GAAG,EAAE;AAAP,GADU,EAEVX,cAFU,CAJX,CAZc,CAqBd;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACfkB,IAAAA,UAAU;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAME,cAAc,GAAIC,IAAD,IAAU;AAChCd,IAAAA,QAAQ,CAAEe,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACA,GAFD;;AAIA,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,4BACC,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,KAAD;AACC,MAAA,KAAK,EAAEd,KADR;AAEC,MAAA,OAAO,EAAES,SAFV;AAGC,MAAA,KAAK,EAAEC,KAHR;AAIC,MAAA,OAAO,EAAEE;AAJV;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GApEQb,G;UAgBJD,O;;;KAhBIC,G;AAsET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useHttp from \"./hooks/useHttp\";\n\nfunction App() {\n\tconst [tasks, setTasks] = useState([]);\n\tconst transformTasks = (tasksObj) => {\n\t\tconst loadedTasks = [];\n\n\t\tfor (const taskKey in tasksObj) {\n\t\t\tloadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n\t\t}\n\n\t\tsetTasks(loadedTasks);\n\t};\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest: fetchTasks,\n\t} = useHttp(\n\t\t{ url: \"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks\" },\n\t\ttransformTasks\n\t);\n\n\t// const fetchTasks = async (taskText) => {\n\t// \tsetIsLoading(true);\n\t// \tsetError(null);\n\t// \ttry {\n\t// \t\tconst response = await fetch(\n\t// \t\t\t\"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\"\n\t// \t\t);\n\n\t// \t\tif (!response.ok) {\n\t// \t\t\tconsole.log(\"Data add failed \");\n\t// \t\t\tthrow new Error(\"Request failed!\");\n\t// \t\t}\n\n\t// \t\tconst data = await response.json();\n\n\t// \t\tconst loadedTasks = [];\n\n\t// \t\tfor (const taskKey in data) {\n\t// \t\t\tloadedTasks.push({ id: taskKey, text: data[taskKey].text });\n\t// \t\t}\n\n\t// \t\tsetTasks(loadedTasks);\n\t// \t} catch (err) {\n\t// \t\tsetError(err.message || \"Something went wrong!\");\n\t// \t}\n\t// \tsetIsLoading(false);\n\t// };\n\n\tuseEffect(() => {\n\t\tfetchTasks();\n\t}, []);\n\n\tconst taskAddHandler = (task) => {\n\t\tsetTasks((prevTasks) => prevTasks.concat(task));\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<NewTask onAddTask={taskAddHandler} />\n\t\t\t<Tasks\n\t\t\t\titems={tasks}\n\t\t\t\tloading={isLoading}\n\t\t\t\terror={error}\n\t\t\t\tonFetch={fetchTasks}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}