{"ast":null,"code":"var _jsxFileName = \"/Users/ishaniamon/Downloads/realcustomhooks/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useHttp from \"../../hooks/useHttp\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createTask = taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NewTask, \"e+CZgtYWzn/WEePX8yQWKpC3/rg=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/ishaniamon/Downloads/realcustomhooks/src/components/NewTask/NewTask.js"],"names":["useState","useHttp","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskData","generatedId","name","createdTask","id","text","taskText","onAddTask","enterTaskHandler","url","method","headers","body"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDR,OAAO,EAAlE;;AAEA,QAAMS,UAAU,GAAIC,QAAD,IAAc;AAChC,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CADgC,CACG;;AACnC,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEC;AAAzB,KAApB;AAEAZ,IAAAA,KAAK,CAACa,SAAN,CAAgBJ,WAAhB;AACA,GALD;;AAOA,QAAMK,gBAAgB,GAAG,MAAOF,QAAP,IAAoB;AAC5CR,IAAAA,eAAe,CACd;AACCW,MAAAA,GAAG,EAAE,iEADN;AAECC,MAAAA,MAAM,EAAE,MAFT;AAGCC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAHV;AAMCC,MAAAA,IAAI,EAAE;AAAEP,QAAAA,IAAI,EAAEC;AAAR;AANP,KADc,EASdP,UATc,CAAf;AAWA,GAZD;;AAcA,sBACC,QAAC,OAAD;AAAA,4BACC,QAAC,QAAD;AAAU,MAAA,WAAW,EAAES,gBAAvB;AAAyC,MAAA,OAAO,EAAEb;AAAlD;AAAA;AAAA;AAAA;AAAA,YADD,EAEEC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CA9BD;;GAAMH,O;UACsDH,O;;;KADtDG,O;AAgCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport useHttp from \"../../hooks/useHttp\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\n\nconst NewTask = (props) => {\n\tconst { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n\tconst createTask = (taskData) => {\n\t\tconst generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\t\tconst createdTask = { id: generatedId, text: taskText };\n\n\t\tprops.onAddTask(createdTask);\n\t};\n\n\tconst enterTaskHandler = async (taskText) => {\n\t\tsendTaskRequest(\n\t\t\t{\n\t\t\t\turl: \"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: { text: taskText },\n\t\t\t},\n\t\t\tcreateTask\n\t\t);\n\t};\n\n\treturn (\n\t\t<Section>\n\t\t\t<TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n\t\t\t{error && <p>{error}</p>}\n\t\t</Section>\n\t);\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}