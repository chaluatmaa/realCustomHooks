{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst useHttp = (requestConfig, applydata) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch( // \"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\"\n      requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        console.log(\"Data add failed \");\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applydata(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/ishaniamon/Downloads/realcustomhooks/src/hooks/useHttp.js"],"names":["React","useState","useHttp","requestConfig","applydata","isLoading","setIsLoading","error","setError","sendRequest","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","console","log","Error","data","json","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA8B;AAAA;;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMQ,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACvCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACH,YAAMG,QAAQ,GAAG,MAAMC,KAAK,EAC3B;AACAT,MAAAA,aAAa,CAACU,GAFa,EAG3B;AACCC,QAAAA,MAAM,EAAEX,aAAa,CAACW,MAAd,GAAuBX,aAAa,CAACW,MAArC,GAA8C,KADvD;AAECC,QAAAA,OAAO,EAAEZ,aAAa,CAACY,OAAd,GAAwBZ,aAAa,CAACY,OAAtC,GAAgD,EAF1D;AAGCC,QAAAA,IAAI,EAAEb,aAAa,CAACa,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAef,aAAa,CAACa,IAA7B,CAArB,GAA0D;AAHjE,OAH2B,CAA5B;;AAUA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACA;;AAED,YAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAAnB;AAEApB,MAAAA,SAAS,CAACmB,IAAD,CAAT;AACA,KAnBD,CAmBE,OAAOE,GAAP,EAAY;AACbjB,MAAAA,QAAQ,CAACiB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACA;;AACDpB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,GA1BD;;AA4BA,SAAO;AAAED,IAAAA,SAAF;AAAaE,IAAAA,KAAb;AAAoBE,IAAAA;AAApB,GAAP;AACA,CAjCD;;GAAMP,O;;AAmCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst useHttp = (requestConfig, applydata) => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst sendRequest = async (taskText) => {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t// \"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\"\n\t\t\t\trequestConfig.url,\n\t\t\t\t{\n\t\t\t\t\tmethod: requestConfig.method ? requestConfig.method : \"GET\",\n\t\t\t\t\theaders: requestConfig.headers ? requestConfig.headers : {},\n\t\t\t\t\tbody: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.log(\"Data add failed \");\n\t\t\t\tthrow new Error(\"Request failed!\");\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\n\t\t\tapplydata(data);\n\t\t} catch (err) {\n\t\t\tsetError(err.message || \"Something went wrong!\");\n\t\t}\n\t\tsetIsLoading(false);\n\t};\n\n\treturn { isLoading, error, sendRequest };\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}