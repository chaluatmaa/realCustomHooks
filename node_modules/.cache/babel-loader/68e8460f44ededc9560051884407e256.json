{"ast":null,"code":"var _jsxFileName = \"/Users/ishaniamon/Downloads/realcustomhooks/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NewTask, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/ishaniamon/Downloads/realcustomhooks/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAC5CJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACH,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC3B,iEAD2B,EAE3B;AACCC,QAAAA,MAAM,EAAE,MADT;AAECC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAEP;AAAR,SAAf,CAFP;AAGCQ,QAAAA,OAAO,EAAE;AACR,0BAAgB;AADR;AAHV,OAF2B,CAA5B;;AAWA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AACjB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACA;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAlBG,CAkB4B;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBN,QAAAA,IAAI,EAAEP;AAAzB,OAApB;AAEAN,MAAAA,KAAK,CAACuB,SAAN,CAAgBF,WAAhB;AACA,KAtBD,CAsBE,OAAOG,GAAP,EAAY;AACbpB,MAAAA,QAAQ,CAACoB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACA;;AACDvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,GA7BD;;AA+BA,sBACC,QAAC,OAAD;AAAA,4BACC,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEG,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADD,EAEEE,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAzCD;;GAAMJ,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\n\nconst NewTask = (props) => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst enterTaskHandler = async (taskText) => {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t\"https://react-http-f4f7f-default-rtdb.firebaseio.com/tasks.json\",\n\t\t\t\t{\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\tbody: JSON.stringify({ text: taskText }),\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\"Request failed!\");\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\n\t\t\tconst generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\t\t\tconst createdTask = { id: generatedId, text: taskText };\n\n\t\t\tprops.onAddTask(createdTask);\n\t\t} catch (err) {\n\t\t\tsetError(err.message || \"Something went wrong!\");\n\t\t}\n\t\tsetIsLoading(false);\n\t};\n\n\treturn (\n\t\t<Section>\n\t\t\t<TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n\t\t\t{error && <p>{error}</p>}\n\t\t</Section>\n\t);\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}